# app
server.port=9000

# security
logging.level.org.springframework.security=TRACE
logging.level.org.springframework.security.oauth2=TRACE

# database config
spring.datasource.url = jdbc:postgresql://${AUTH_DB_HOST}:${AUTH_DB_PORT}/${AUTH_DB_NAME}
spring.datasource.username = ${AUTH_DB_USER}
spring.datasource.password = ${AUTH_DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# database logging
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# kafka # ${KAFKA_HOST}:${KAFKA_PORT}
spring.kafka.bootstrap-servers=${AUTH_KAFKA_SERVER}

#spring.security.oauth2.client.registration.google-idp.provider=google
#spring.security.oauth2.client.registration.google-idp.client-id=${GOOGLE_CLIENT_ID:your_client_id}
#spring.security.oauth2.client.registration.google-idp.client-secret=${GOOGLE_CLIENT_SECRET:your_client_secret}
#spring.security.oauth2.client.registration.google-idp.scope=openid, https://www.googleapis.com/auth/userinfo.profile, https://www.googleapis.com/auth/userinfo.email
#spring.security.oauth2.client.registration.google-idp.client-name=oauth2-tutorial-client
#spring.security.oauth2.client.provider.google.user-name-attribute=email